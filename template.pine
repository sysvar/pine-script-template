//@version=5
// Author https://github.com/sysvar/pine-script-template

strategy(title='Git Pine Script v5 Template', shorttitle='TEMPLATE', overlay=true, pyramiding=0, initial_capital=40000, default_qty_type=strategy.fixed, default_qty_value=500000, currency=currency.USD, commission_type=strategy.commission.cash_per_contract, commission_value=0.000006)


// === CORE SAFETY FEATURES ===
//strategy.risk.max_drawdown(value=1000, type=strategy.cash)
//strategy.risk.max_position_size(contracts=500000)
//strategy.risk.max_cons_loss_days(count=5)


// === CORE VARIABLES ===
var sys_logic_buy = false
var sys_logic_sell = false


// === CORE GUI INPUTS ===
sys_input_backtest_range = input.bool(false, "Enable Backtesting Dates", group="Backtest Range Restrictions")
sys_input_backtest_start = input.time(timestamp("14 Nov 2023 07:00 +0000"), "Start Date - UTC 0", group="Backtest Range Restrictions")
sys_input_backtest_end = input.time(timestamp("14 Nov 2023 19:00 +0000"), "End Date - UTC 0", group="Backtest Range Restrictions")

sys_input_time_hours = input.session("0700-1900", "Allowed hours", group="Trading Time Range Restrictions")
sys_input_time_days = input.string("123456", "Allowed Days", group="Trading Time Range Restrictions")

sys_input_dire_buy = input.bool(true, title='Trade Buy', group="Trading Entry")
sys_input_dire_sell = input.bool(true, title='Trade Sell', group="Trading Entry")
sys_input_dire_reverse = input.bool(false, title='Reverse Buy/Sell', group="Trading Entry")

sys_input_exit_tpsl = input.bool(true, "(A) Take Profit / Stop Loss", group="Trading Exit (Select Only 1)")
sys_input_exit_tpts = input.bool(false, "(B) Take Profit / Trailing Stop (TODO)", group="Trading Exit (Select Only 1)")
sys_input_exit_rhlr = input.bool(false, "(C) Recent High/Low and Risk Reward Ratio (TODO)", group="Trading Exit (Select Only 1)")

sys_input_risk_tpslProfit = input.float(9, step = 1, title="(A) Take Profit Pips", group="Risk Management")
sys_input_risk_tpslLoss = input.float(4, step = 1, title="(A) Stop Loss Pips", group="Risk Management")
sys_input_risk_hlrrLookBack = input.int(20, step = 1, title="(C) Lookback Period High/Low", group="Risk Management")
sys_input_risk_hlrrExtraPips = input.float(0.5, step = 0.1, title="(C) Extra Pips Above/Below", group="Risk Management")
sys_input_risk_hlrrRiskReward = input.float(1.5, step = 0.1, title="(C) Risk Reward Ratio", group="Risk Management")
sys_input_cand_newsPips = input.int(7, title="News Pip Trigger", group="Risk Management")
sys_input_cand_newsCandles = input.int(10, title="News Con. After Candles", group="Risk Management")


// === CORE FUNCT/LOGIC ===
sys_logic_backtest = sys_input_backtest_range == false or (sys_input_backtest_range == true and (time >= sys_input_backtest_start and time <= sys_input_backtest_end))

sys_logic_time = time(timeframe.period, sys_input_time_hours + ":" + sys_input_time_days, timezone = "Europe/London")

sys_logic_cand_newsdecimal = sys_input_cand_newsPips / 10000  // Important conversion
sys_funct_candle_news = array.new_float(0)
for i = 0 to sys_input_cand_newsCandles - 1
    array.push(sys_funct_candle_news, i == 0 ? high - low : high[i] - low[i])
sys_logic_candle_news = not (array.max(sys_funct_candle_news) > sys_logic_cand_newsdecimal)

sys_logic_position = not (strategy.position_size < 0 or strategy.position_size > 0)

sys_logic_backtest_outRange = sys_input_backtest_range and (time < sys_input_backtest_start or time > sys_input_backtest_end)
sys_logic_trading_outRange  = not sys_logic_time

sys_logic_hlrr_sellEntry = ((ta.highest(high, sys_input_risk_hlrrLookBack) + (sys_input_risk_hlrrExtraPips / 10000)) - close) * 100000
sys_logic_hlrr_buyEntry = (((ta.lowest(low, sys_input_risk_hlrrLookBack) - (sys_input_risk_hlrrExtraPips / 10000)) - close) * 100000) * -1
sys_logic_hlrr_sellExit = sys_logic_hlrr_sellEntry * sys_input_risk_hlrrRiskReward
sys_logic_hlrr_buyExit = sys_logic_hlrr_buyEntry * sys_input_risk_hlrrRiskReward

// === CORE SHADING ===
bgcolor(sys_logic_backtest_outRange ? color.new(color.red, 90) : na, title="Backtest Range")
bgcolor(sys_logic_trading_outRange ? color.new(color.red, 90) : na, title="Non-Trading Range")



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                    //
//    EDIT  ⇣  EDIT  ⇣  EDIT  ⇣  EDIT  ⇣  EDIT  ⇣  EDIT  ⇣  EDIT  ⇣  EDIT  ⇣   EDIT  ⇣  EDIT  ⇣  EDIT  ⇣  EDIT    //
//                                                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// === USER STRATEGIES - (FUNCTIONS & LOGIC) ===

// 1 // EMA   ////////////////////////////////////////////////////////////////////////////

// Variables
var usr_group_name="User Strategy -----------------------------------------------------------------------------------"
var usr_logic_ema = false

// Input
//usr_input_ema_length = input.int(9, step = 1, title="EMA Length", group="User Strategy")
usr_input_ema_length = input.int(9, step = 1, title="EMA Length", group=usr_group_name)

// Function
usr_funct_ema = ta.ema(close, usr_input_ema_length)

// Logic
usr_logic_ema_diff = close - usr_funct_ema
usr_logic_ema_buy = usr_logic_ema_diff > 3
usr_logic_ema_sell = usr_logic_ema_diff < 3

// Plot
plot(usr_funct_ema, color=color.yellow, title="EMA")


//////////////////////////////////////////////////////////////////////////////////////////


// === USER FINAL LOGIC ===

if usr_logic_ema_buy == true
    if sys_input_dire_reverse
        sys_logic_sell := true
    else
        sys_logic_buy := true   

if usr_logic_ema_sell == true
    if sys_input_dire_reverse
        sys_logic_buy := true
    else
        sys_logic_sell := true

//log.info("sys_logic_buy: {0}", sys_logic_buy)
//log.info("sys_logic_sell: {0}", sys_logic_sell)

// Remember to reset these variables at the end of the script



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                    //
//    EDIT  ⇡  EDIT  ⇡  EDIT  ⇡  EDIT  ⇡  EDIT  ⇡  EDIT  ⇡  EDIT  ⇡  EDIT  ⇡   EDIT  ⇡  EDIT  ⇡  EDIT  ⇡  EDIT    //
//                                                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



// === CORE POSITION EXECUTION ===

if sys_logic_buy and sys_logic_time and sys_logic_backtest and sys_input_dire_buy and sys_logic_candle_news and sys_logic_position
    //log.info("sys_logic_backtest: {0}\n sys_input_dire_buy: {1}\n sys_logic_candle_news: {2}\n sys_logic_position: {3}", sys_logic_backtest, sys_input_dire_buy, sys_logic_candle_news, sys_logic_position)
    if sys_input_exit_tpsl
        strategy.entry("TPSL Buy Entry", strategy.long)
        strategy.exit("TPSL Buy Exit", from_entry ="TPSL Buy Entry", loss=sys_input_risk_tpslLoss * 10, profit=sys_input_risk_tpslProfit * 10)
    if sys_input_exit_tpts
        log.info("Buy - Take Profit Trailing Stop NOT IMPLEMENTED YET")
    if sys_input_exit_hlrr
        strategy.entry("HLRR Buy Entry", strategy.long)
        strategy.exit("HLRR Buy Exit", from_entry ="HLRR Buy Entry", loss=sys_logic_hlrr_buyEntry, profit=sys_logic_hlrr_buyExit)


if sys_logic_sell and sys_logic_time and sys_logic_backtest and sys_input_dire_sell and sys_logic_candle_news and sys_logic_position
    //log.info("sys_logic_backtest: {0}\n sys_input_dire_sell: {1}\n sys_logic_candle_news: {2}\n sys_logic_position: {3}", sys_logic_backtest, sys_input_dire_sell, sys_logic_candle_news, sys_logic_position)
    if sys_input_exit_tpsl
        strategy.entry("TPSL Sell Entry", strategy.short)
        strategy.exit("TPSL Sell Exit", from_entry ="TPSL Sell Entry", loss=sys_input_risk_tpslLoss * 10, profit=sys_input_risk_tpslProfit * 10)
    if sys_input_exit_tpts
        log.info("Sell - Take Profit Trailing Stop NOT IMPLEMENTED YET")
    if sys_input_exit_hlrr
        strategy.entry("HLRR Sell Entry", strategy.short)
        strategy.exit("HLRR Sell Exit", from_entry ="HLRR Sell Entry", loss=sys_logic_hlrr_sellEntry, profit=sys_logic_hlrr_sellExit)



// === CORE RESET VARIABLES ===

sys_logic_position := false
sys_logic_buy := false
sys_logic_sell := false



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                    //
//    EDIT  ⇣  EDIT  ⇣  EDIT  ⇣  EDIT  ⇣  EDIT  ⇣  EDIT  ⇣  EDIT  ⇣  EDIT  ⇣   EDIT  ⇣  EDIT  ⇣  EDIT  ⇣  EDIT    //
//                                                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// === USER RESET VARIABLES ===
usr_logic_ema_buy := false
usr_logic_ema_sell := false
